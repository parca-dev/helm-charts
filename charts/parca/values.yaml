# -- specifies pull secrets for image repository
imagePullSecrets: []
# -- overrides chart name
nameOverride: ""
# -- Overrides helm-generated chart fullname
fullnameOverride: ""

agent:
  # -- Allows disabling parca agent
  enabled: true
  image:
    # -- Overrides the image repository
    repository: ghcr.io/parca-dev/parca-agent
    # -- Overrides pullpolicy
    pullPolicy: IfNotPresent
    # -- Overrides the image tag
    tag: "v0.9.1"
  # -- Path to host docker/containerd/crio socket
  socketPath: ""
  # -- Agent log level
  logLevel: info
  # -- label selector for filtering out pods with pprof, ie "parca=enabled"
  podLabelSelector: ""
  # -- additional arguments to pass to the agent
  extraArgs: []
  # -- Additional container environment variables for agent
  extraEnv: []
  # -- Address of parca server to send profiles. If not defined, will be generated based on deployment settings.
  storeAddress: ""
  # -- Additional annotations for pods
  podAnnotations: {}
  # -- Additional pod secutiry context
  podSecurityContext: {}
  # -- Security context, needs to be prilileged for ful functionality
  securityContext:
    privileged: true
    readOnlyRootFilesystem: true
  service:
    # -- service type for agent
    type: ClusterIP
    # -- service port for agent
    port: 7071
  serviceMonitor:
    # -- enables prometheus servicemonitor for agent
    enabled: false
    jobLabel: parca-agent
  # -- node selector for scheduling agent pods
  nodeSelector: {}
  # -- node tolerations for scheduling agent pods
  tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
  # -- resource limits and requests
  resources: {}

server:
  # -- Allows disabling parca server
  enabled: true
  image:
    # -- Overrides the image repository for server
    repository: ghcr.io/parca-dev/parca
    # -- Overrides pull policy for server
    pullPolicy: IfNotPresent
    # -- Overrides the image tag for server
    tag: "v0.12.1"
  # -- logging level of parca server
  logLevel: info
  # -- CORS setting
  corsAllowedOrigins: "*"
  # -- Active memory dedicated for storage. 512MB my default
  storageActiveMemory: 536870912
  # -- OpenTelemetry collector address to send traces to
  otlpAddress: ""
  # -- additional arguments to pass to the server
  extraArgs: []
  # -- additional container environment variables for server
  extraEnv: []
  # -- parca server config block
  config:
    debug_info:
      bucket:
        config:
          directory: "./tmp"
        type: FILESYSTEM
      cache:
        config:
          directory: "./tmp"
        type: FILESYSTEM
  # -- scrape configs for parca server
  scrapeConfigs:
    - job_name: 'kubernetes-pods'
      scrape_interval: 1m
      scrape_timeout: 10s
      kubernetes_sd_configs:
        - role: pod
      relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_parca_dev_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_parca_dev_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_parca_dev_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
  # -- additional annotations for server pod
  podAnnotations: {}
  # -- additional security context for server pod
  podSecurityContext: {}
  # -- additional security context for server
  securityContext: {}
  service:
    # -- service type for server
    type: ClusterIP
    # -- service port for server
    port: 7070
  serviceMonitor:
    # -- enables servicemonitor for server monitoring
    enabled: false
    jobLabel: parca-server
  # -- node selector for scheduling server pod
  nodeSelector: {}
  # -- tolerations for scheduling server pod
  tolerations: {}
  # -- resource limits and requests for server pod
  resources: {}

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""

ingress:
  # -- enables ingress for server UI
  enabled: false
  # -- specifies ingress class name (ie nginx)
  className: ""
  # -- additional annotations for ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# parca keeps it's TSDB in-memory, so replicas and HPAs are useless.
# That might change in future, so let's keep that stuff comemented out, just in casr
# server.replicaCount: 1

# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
#   targetMemoryUtilizationPercentage: 80

# affinity: {}
